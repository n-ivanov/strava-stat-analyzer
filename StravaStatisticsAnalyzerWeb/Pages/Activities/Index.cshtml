@page
@using System.Extensions
@model StravaStatisticsAnalyzer.Web.Pages.Activities.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="GetActivities" asp-controller="Strava" class="btn btn-default">Get activities from Strava</a>
    <a asp-action="RefreshActivities" asp-controller="Strava" class="btn btn-default">Refresh</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Activity[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Activity[0].Distance)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Activity[0].MovingTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Activity[0].ElapsedTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Activity[0].AvgSpeed)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Activity[0].MaxSpeed)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Activity[0].DateTime)
            </th>
            @*
            <th>
                @Html.DisplayNameFor(model => model.Activity[0].AthleteID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Activity[0].TotalElevationGain)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Activity[0].ElevationHigh)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Activity[0].ElevationLow)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Activity[0].StartLatitude)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Activity[0].StartLongitude)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Activity[0].EndLatitude)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Activity[0].EndLongitude)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Activity[0].Commute)
            </th>
            *@
            <th>
                @Html.DisplayNameFor(model => model.Activity[0].Description)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Activity) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Distance)
            </td>
            <td>
                @{string convertedMovingTime = item.MovingTime.ToTime();}
                @Html.DisplayFor(modelItem => convertedMovingTime)
            </td>
            <td>
                @{string convertedElapsedTime = item.ElapsedTime.ToTime();}
                @Html.DisplayFor(modelItem => convertedElapsedTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AvgSpeed)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MaxSpeed)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateTime)
            </td>
            @*
            <td>
                @Html.DisplayFor(modelItem => item.AthleteID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TotalElevationGain)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ElevationHigh)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ElevationLow)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartLatitude)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartLongitude)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EndLatitude)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EndLongitude)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Commute)
            </td>
            *@
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>

            <td>
                <a asp-page="./Edit" asp-route-id="@item.ID">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.ID">Details</a>
            </td>
        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.Activity.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Activity.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
   asp-route-pageIndex="@(Model.Activity.PageIndex - 1)"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-page="./Index"
   asp-route-pageIndex="@(Model.Activity.PageIndex + 1)"
   class="btn btn-default @nextDisabled">
    Next
</a>
